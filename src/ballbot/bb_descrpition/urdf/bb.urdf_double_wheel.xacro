<?xml version="1.0" encoding="UTF-8"?>
<robot xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
        xmlns:interface="http://ros.org/wiki/xacro"
        xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
        xmlns:xacro="http://ros.org/wiki/xacro">

   <!-- inits colors &PI -->
   <xacro:include filename="$(find ballbot_description)/urdf/common_properties.xacro" />
   <xacro:include filename="$(find ballbot_description)/urdf/bb_double_wheel.gazebo.xacro" />

   <xacro:if value="$(arg use_realsense)">
   <xacro:include filename="$(find ballbot_description)/urdf/realsense_camera.urdf.xacro" />
   </xacro:if>

   <!--<xacro:include filename="$(find hector_xacro_tools)/urdf/inertia_tensors.urdf.xacro" />-->

   <!-- some properties:
   see: http://support.robotis.com/en/product/actuator/dynamixel_x/xm_series/xm430-w350.htm
   Effort: 4.1N.m (at 12.0V, 2.3A)  Velocity: 57rpm (at 14.8V) (no load speed)   -->

   <!-- wheel parameter: h=2.5cm, r=3cm m=63g calculate inertia via: https://en.wikipedia.org/wiki/List_of_moments_of_inertia  -->
   <xacro:property name="mass_wheel" value="0.063" />    <!-- rad mit mitnehmer ohne motor und ohne kleine schwarze subwheels -->
   <xacro:property name="d_inertia_wheel_xx" value="2.75e-5" />    <!-- unit is kg m^2 diagonal inertia value for ixx -->
   <xacro:property name="d_inertia_wheel_yy_zz" value="1.718e-5" />    <!-- unit is kg m^2 diagonal inertia value for iyy,izz -->

   <!-- subwheels parameters : -->
   <xacro:property name="mass_subwheel" value="0.006" />
   <xacro:property name="d_inertia_subwheel" value="1e-8" />    <!-- unit is kg m^2 diagonal inertia value for ixx,iyy,izz -->


   <!--motor values:-->
   <!-- calculate max effort with emanual: http://support.robotis.com/en/product/actuator/dynamixel_x/xm_series/xm430-w350.htm -->
   <!-- dynamixel: XM430-W350-T: see performance graph the effort depends on current, efficiency(E), torque : -->
   <!-- http://simplemotor.com/calculations/ τ = (I * V * E *60) / (rpm * 2π) -->
   <xacro:property name="XL430_W250_max_effort" value="4.1" />    <!-- sollte: 1.5 -> klappt damit aber nicht. nimm 4.1 -->
   <xacro:property name="XL430_W250_max_velocity" value="5.7" />  <!-- sollte: ${61 * 2*pi/60}  klappt damit aber nicht nimm 5.7-->

   <!-- trägheit des motors: if these values are higher than the torques wheel does not turn, if this value is not small enough gazebo error-->
   <!-- damping: is the damping force which is proportional to the velocity of the moving body [Nm*s/rad] -->
   <!-- friction: The physical static friction value of the joint [Nm] -->
   <!-- see: http://wiki.ros.org/urdf/XML/joint -->
   <xacro:property name="wheel_joint_damping" value="0.01" />    <!-- 0.01 sollte: 0.5 -->
   <xacro:property name="wheel_joint_friction" value="0.05" />     <!-- 0.05 sollte: 1.0 -->

   <xacro:macro name="ballbot_double_macro">

      <link name="base_footprint" />

      <joint name="body_joint" type="fixed">
         <parent link="base_footprint" />
         <child link="body_link" />
         <!-- the height point is ballmiddle point to ball_link + diameter/2 -->
         <origin xyz="0.0 0.0 ${0.2122+0.04}" rpy="0.0 0.0 0.0" />
      </joint>

      <link name="body_link">
         <visual>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
            <geometry>
               <mesh filename="package://ballbot_description/meshes/base/TUD_Ballbot_V30_MS_ohne_Raeder.stl" scale="0.001 0.001 0.001" />
            </geometry>
            <cast_shadows>1</cast_shadows>
            <transparency>0</transparency>
            <material name="light_black" />
         </visual>
         <inertial>
            <origin xyz="0.0 0.0 0.05" /> <!-- important: here you can set the center of mass position! -->
            <mass value="1.572" /> <!-- eig. 1.572 -->  <!-- eigentlich: ixx="0.1" ixy="0.001" ixz="0.002" iyy="0.099" iyz="0.00" izz="0.007" -->
            <inertia ixx="0.1" ixy="0.00" ixz="0.00" iyy="0.1" iyz="0.00" izz="0.007" />
         </inertial>
         <collision>
            <origin xyz="0 0 ${0.048*2}" rpy="0 0 0" />
            <geometry>
               <cylinder length="${0.048*4}" radius="0.078" /> <!-- geht von der mitte des zylinders aus! -->
            </geometry>
            <!-- <geometry>
               <mesh filename="package://ballbot_description/meshes/base/Ballbot_ohne_Raeder_V2.0MS.stl" scale="0.001 0.001 0.001" />
            </geometry>-->
         </collision>
      </link>

      <!-- macro for wheels and their joints: -->
      <xacro:macro name="wheel_link_joint_macro" params="pos *joint_origin">
         <joint name="wheel${pos}_joint" type="continuous">
            <parent link="body_link" />
            <child link="wheel${pos}_link" />
            <xacro:insert_block name="joint_origin" />
            <axis xyz="1 0 0" />
            <limit effort="${XL430_W250_max_effort}" velocity="${XL430_W250_max_effort}" />
            <dynamics friction="${wheel_joint_friction}" damping="${wheel_joint_damping}" />
         </joint>
         <link name="wheel${pos}_link">
            <visual>
               <origin xyz="0 0 0" rpy="0 0 0" />
               <geometry>
                  <mesh filename="package://ballbot_description/meshes/wheels/Wheel2_Double_ohneRaeder.stl" scale="0.001 0.001 0.001" />
               </geometry>
               <cast_shadows>1</cast_shadows>
               <transparency>0</transparency>
               <material name="light_black" />
            </visual>
            <inertial>
               <origin xyz="0.0 0.0 0.0" />
               <mass value="${mass_wheel}" />
               <inertia ixx="${d_inertia_wheel_xx}" ixy="0.0" ixz="0.0" iyy="${d_inertia_wheel_yy_zz}" iyz="0.0" izz="${d_inertia_wheel_yy_zz}" />
            </inertial>
            <collision>
               <origin xyz="0 0 0" rpy="0 0 0" />
               <geometry>
                  <mesh filename="package://ballbot_description/meshes/wheels/Wheel2_Double_ohneRaeder.stl" scale="0.001 0.001 0.001" />
               </geometry>
            </collision>
         </link>
      </xacro:macro>

      <!-- generate wheels -->
      <!-- Bezug immer auf Basis Koordinaten System , Basis ändert sich nie!-->
      <xacro:wheel_link_joint_macro pos="1">
         <origin xyz="0.07324 0.0 -0.09097" rpy="${0} ${M_PI/4} ${0}" />
      </xacro:wheel_link_joint_macro>

      <xacro:wheel_link_joint_macro pos="2">
         <origin xyz="-0.03662 +0.06343 -0.09097" rpy="${0} ${M_PI/4} ${+2*M_PI/3}" />
      </xacro:wheel_link_joint_macro>

      <xacro:wheel_link_joint_macro pos="3">
         <origin xyz="-0.03662 -0.06343 -0.09097" rpy="${0} ${M_PI/4} ${-2*M_PI/3}" />
      </xacro:wheel_link_joint_macro>


      <!-- macro for sub_wheels and their joints: -->
      <xacro:macro name="subwheel_link_joint_macro" params="pos orient *joint_origin_sub">
         <joint name="subwheel${pos}_${orient}_joint" type="continuous">
            <parent link="wheel${pos}_link" />
            <child link="subwheel${pos}_${orient}_link" />
            <xacro:insert_block name="joint_origin_sub" />
            <axis xyz="1 0 0" />
            <limit effort="0.0" velocity="0.0" />
            <dynamics friction="0.0" damping="0.0" />
         </joint>

         <link name="subwheel${pos}_${orient}_link">
            <visual>
               <origin xyz="0 0 0" rpy="0 0 0" />
               <geometry>
                  <mesh filename="package://ballbot_description/meshes/wheels/Wheel2_wheel_rightOrient.stl" scale="0.001 0.001 0.001" />
               </geometry>
            </visual>
            <inertial>
               <origin xyz="0.0 0.0 0.0" />
               <mass value="${mass_subwheel}" />
               <inertia ixx="${d_inertia_subwheel}" ixy="0" ixz="0" iyy="${d_inertia_subwheel}" iyz="0" izz="${d_inertia_subwheel}" />
            </inertial>
            <collision>
               <origin xyz="0 0 0" rpy="0 0 0" />
               <geometry>
                  <mesh filename="package://ballbot_description/meshes/wheels/Wheel2_wheel_rightOrient.stl" scale="0.001 0.001 0.001" />
               </geometry>
            </collision>
         </link>
      </xacro:macro>


      <!-- subwheel macros -->
      <xacro:macro name="subwheel_generate_macro" params="pos">
         <xacro:subwheel_link_joint_macro pos="${pos}" orient="1_out">
            <origin xyz="0.01375 0.0 -0.0235" rpy="${0.0} ${-M_PI} ${-M_PI/2}" />
         </xacro:subwheel_link_joint_macro>
         <xacro:subwheel_link_joint_macro pos="${pos}" orient="2_out">
            <origin xyz="0.01375 0.02235 -0.00726" rpy="${0.0} ${2/5*M_PI} ${-M_PI/2}" />
         </xacro:subwheel_link_joint_macro>
         <xacro:subwheel_link_joint_macro pos="${pos}" orient="3_out">
            <origin xyz="0.01375 -0.02235 -0.00726" rpy="${0.0} ${-2/5*M_PI} ${-M_PI/2}" />
         </xacro:subwheel_link_joint_macro>
         <xacro:subwheel_link_joint_macro pos="${pos}" orient="4_out">
            <origin xyz="0.01375 0.01381 0.01901" rpy="${0.0} ${4/5*M_PI} ${-M_PI/2}" />
         </xacro:subwheel_link_joint_macro>
         <xacro:subwheel_link_joint_macro pos="${pos}" orient="5_out">
            <origin xyz="0.01375 -0.01381 0.01901" rpy="${0.0} ${-4/5*M_PI} ${-M_PI/2}" />
         </xacro:subwheel_link_joint_macro>
         <xacro:subwheel_link_joint_macro pos="${pos}" orient="1_in">
            <origin xyz="0.00125 0.0 0.0235" rpy="${0.0} ${-M_PI} ${-M_PI/2}" />
         </xacro:subwheel_link_joint_macro>
         <xacro:subwheel_link_joint_macro pos="${pos}" orient="2_in">
            <origin xyz="0.00125 -0.02235 0.00726" rpy="${0.0} ${2/5*M_PI} ${-M_PI/2}" />
         </xacro:subwheel_link_joint_macro>
         <xacro:subwheel_link_joint_macro pos="${pos}" orient="3_in">
            <origin xyz="0.00125 0.02235 0.00726" rpy="${0.0} ${-2/5*M_PI} ${-M_PI/2}" />
         </xacro:subwheel_link_joint_macro>
         <xacro:subwheel_link_joint_macro pos="${pos}" orient="4_in">
            <origin xyz="0.00125 0.01381 -0.01901" rpy="${0.0} ${-4/5*M_PI} ${-M_PI/2}" />
         </xacro:subwheel_link_joint_macro>
         <xacro:subwheel_link_joint_macro pos="${pos}" orient="5_in">
            <origin xyz="0.00125 -0.01381 -0.01901" rpy="${0.0} ${+4/5*M_PI} ${-M_PI/2}" />
         </xacro:subwheel_link_joint_macro>
      </xacro:macro>

      <!-- generate subwheel's -->
      <xacro:subwheel_generate_macro pos="1" />
      <xacro:subwheel_generate_macro pos="2" />
      <xacro:subwheel_generate_macro pos="3" />


      <!-- Ballbot Sensors-->
      <!-- NOTE that the sensors are modeled weightless because the whole body contanins in it's inertias the weights of the sensors (camera, lds) -->
      <joint name="imu_joint" type="fixed">
         <parent link="body_link" />
         <child link="imu_link" />
         <origin xyz="0 0 0.068" rpy="0.0 0.0 0" />
      </joint>

      <link name="imu_link">
         <inertial>
            <origin xyz="0.0 0.0 0.0" />
            <mass value="0.001" />
            <inertia ixx="0.00000001" ixy="0.0" ixz="0.0" iyy="0.00000001" iyz="0.0" izz="0.00000001" />
         </inertial>
      </link>

      <!--laser sensor: -->
      <xacro:if value="$(arg use_laser)">
      <joint name="scan_joint" type="fixed">
         <parent link="body_link" />
         <child link="base_scan" />
         <origin xyz="0.00894 0.0 0.175" rpy="0.0 0.0 0.0" /> <!-- Messung Michi -->
      </joint>

<link name="base_scan">
  <visual>
    <origin xyz="0.0 0.0 -0.01" rpy="0.0 0.0 ${pi}" />
    <geometry>
      <mesh filename="package://ballbot_description/meshes/sensors/lds.stl" scale="0.001 0.001 0.001" />
    </geometry>
    <material name="dark" />
  </visual>

  <collision>
    <origin xyz="0.012 0.0 -0.01" rpy="0.0 0.0 0.0" />
    <geometry>
      <cylinder length="0.040" radius="0.05" />
    </geometry>
  </collision>

  <inertial>
    <mass value="0.00001" />
    <origin xyz="-0.0000687 0.000001 0.000038" />
    <inertia ixx="-1.801e-09" ixy="-0.007e-09" ixz="3.231e-09"
             iyy="-7.595e-09" iyz="0.004e-09"
             izz="-5.794e-09" />
  </inertial>
</link>
</xacro:if>

<xacro:if value="$(arg use_realsense)">
<joint name="realsense_mount_joint" type="fixed">
<parent link="body_link" />
<child link="camera_mount_link" />
<origin xyz="0.081 -0.0461 0.15045" rpy="0.0 0.0 ${pi}" />
</joint>


<link name="camera_mount_link">
<visual>
<origin xyz="0.00133 -0.046 -0.00326" rpy="0.0 0.0 0.0" />
<geometry>
<mesh filename="package://ballbot_description/meshes/base/realsense_mount.stl" scale="0.001 0.001 0.001" />
</geometry>
<material name="dark" />
</visual>

<collision>
<origin xyz="0.00133 -0.056 -0.00326" rpy="0.0 0.0 0.0" />
<geometry>
<box size="0.0175 0.154 0.024" />
</geometry>
</collision>

<inertial>
<mass value="0.0001" />
<origin xyz="0.0000616 -0.0004132 -0.0000000235" />
<inertia ixx="40.506e-09" ixy="-0.712e-09" ixz="0.472e-09"
       iyy="2.546e-09" iyz="-0.601e-09"
       izz="39.799e-09" />
</inertial>
</link>

<!-- exectutes the macro in realsense_camera.urdf.xacro -->
<xacro:realsense_camera name="camera" parent="camera_mount_link">
  <origin xyz="0.0 0.005 -0.00337" rpy="0.0 0.0 ${pi}" />
</xacro:realsense_camera>
   </xacro:if> <!-- end realsense -->

   </xacro:macro>
</robot>
